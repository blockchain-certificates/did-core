[
  "1.4 Conformance\nA conforming producer is any algorithm realized as software and/or\nhardware that generates conforming DIDs or\nconforming DID Documents. A conforming producer\nMUST NOT produce non-conforming DIDs or DID documents.\n      ",
  "1.4 Conformance\nA conforming consumer is any algorithm realized as software and/or\nhardware that consumes conforming DIDs or\nconforming DID documents. A conforming consumer\nMUST produce errors when consuming non-conforming DIDs or DID\ndocuments.\n      ",
  "3.1 DID Syntax\nThe generic DID scheme is a URI scheme conformant with\n[RFC3986]. The ABNF definition can be found below, which uses the syntax in\n[RFC5234] and the corresponding definitions for ALPHA and\nDIGIT. All other rule names not defined in the ABNF below are\ndefined in [RFC3986]. All DIDs MUST conform to the\nDID Syntax ABNF Rules.\n      ",
  "3.2 DID URL Syntax\nThe following is the ABNF definition using the syntax in [RFC5234]. It builds\non the did scheme defined in § 3.1 DID Syntax. The path-abempty, query, and fragment components are\ndefined in [RFC3986]. All DID URLs MUST conform to the\nDID URL Syntax ABNF Rules. DID methods can further restrict these\nrules, as described in § 8.1 Method Syntax.\n      ",
  "3.2.1 DID Parameters\nIdentifies a service from the DID document by service ID.\nIf present, the associated value MUST be an ASCII string.\n              ",
  "3.2.1 DID Parameters\nA relative URI reference according to RFC3986 Section 4.2 that identifies a\nresource at a service endpoint, which is selected from a DID\ndocument by using the service parameter.\nIf present, the associated value MUST be an ASCII string and MUST use percent-encoding for\ncertain characters as specified in RFC3986\nSection 2.1.\n              ",
  "3.2.1 DID Parameters\nA relative URI reference according to RFC3986 Section 4.2 that identifies a\nresource at a service endpoint, which is selected from a DID\ndocument by using the service parameter.\nIf present, the associated value MUST be an ASCII string and MUST use percent-encoding for\ncertain characters as specified in RFC3986\nSection 2.1.\n              ",
  "3.2.1 DID Parameters\nIdentifies a specific version of a DID document to be resolved (the\nversion ID could be sequential, or a UUID, or method-specific).\nIf present, the associated value MUST be an ASCII string.\n              ",
  "3.2.1 DID Parameters\nIdentifies a certain version timestamp of a DID document to be resolved.\nThat is, the DID document that was valid for a DID at a certain\ntime. If present, the associated value\nMUST be an ASCII string which is a valid XML\ndatetime value, as defined in section 3.3.7 of W3C XML Schema Definition Language\n(XSD) 1.1 Part 2: Datatypes [XMLSCHEMA11-2]. This datetime value MUST be\nnormalized to UTC 00:00:00 and without sub-second decimal precision.\nFor example: 2020-12-20T19:17:47Z.\n              ",
  "3.2.1 DID Parameters\nIdentifies a certain version timestamp of a DID document to be resolved.\nThat is, the DID document that was valid for a DID at a certain\ntime. If present, the associated value\nMUST be an ASCII string which is a valid XML\ndatetime value, as defined in section 3.3.7 of W3C XML Schema Definition Language\n(XSD) 1.1 Part 2: Datatypes [XMLSCHEMA11-2]. This datetime value MUST be\nnormalized to UTC 00:00:00 and without sub-second decimal precision.\nFor example: 2020-12-20T19:17:47Z.\n              ",
  "3.2.1 DID Parameters\nA resource hash of the DID document to add integrity protection, as\nspecified in [HASHLINK]. This parameter is non-normative.\nIf present, the associated value MUST be an\nASCII string.\n              ",
  "3.2.1 DID Parameters\nImplementers as well as DID method specification authors might use\nadditional DID parameters that are not listed here. For maximum\ninteroperability, it is RECOMMENDED that DID parameters use the DID\nSpecification Registries mechanism [DID-SPEC-REGISTRIES], to avoid collision\nwith other uses of the same DID parameter with different semantics.\n        ",
  "3.2.2 Relative DID URLs\nWhen resolving a relative DID URL reference, the algorithm specified in\nRFC3986 Section 5: Reference Resolution\nMUST be used. The base URI value is the DID that is\nassociated with the DID subject, see § 5.1.1 DID Subject. The\nscheme is did. The authority is a\ncombination of <method-name>:<method-specific-id>, and the\npath, query, and fragment\nvalues are those defined in § Path, § Query, and § Fragment, respectively.\n        ",
  "4.1 Extensibility\nFor maximum interoperability, it is RECOMMENDED that extensions use the\nW3C DID Specification Registries mechanism [DID-SPEC-REGISTRIES]. The use of\nthis mechanism for new properties or other extensions is the only specified\nmechanism that ensures that two different representations will be able to\nwork together.\n        ",
  "4.1 Extensibility\nRepresentations MAY define other extensibility mechanisms, including ones\nthat do not require the use of the DID Specification Registries. Such extension\nmechanisms SHOULD support lossless conversion into any other conformant\nrepresentation. Extension mechanisms for a representation SHOULD\ndefine a mapping of all properties and representation syntax into the data model and its type system.\n      ",
  "4.1 Extensibility\nRepresentations MAY define other extensibility mechanisms, including ones\nthat do not require the use of the DID Specification Registries. Such extension\nmechanisms SHOULD support lossless conversion into any other conformant\nrepresentation. Extension mechanisms for a representation SHOULD\ndefine a mapping of all properties and representation syntax into the data model and its type system.\n      ",
  "5.1.1 DID Subject\nThe value of id MUST be a string that conforms to the rules in § 3.1 DID Syntax and MUST exist in the root map of the data\nmodel for the DID document.\n          ",
  "5.1.1 DID Subject\nThe value of id MUST be a string that conforms to the rules in § 3.1 DID Syntax and MUST exist in the root map of the data\nmodel for the DID document.\n          ",
  "5.1.2 DID Controller\nThe controller property is OPTIONAL. If present, the value MUST\nbe a string or an ordered set of strings that conform to the rules in § 3.1 DID Syntax. The corresponding DID document(s) SHOULD\ncontain verification relationships that explicitly permit the use of\ncertain verification methods for specific purposes.\n          ",
  "5.1.2 DID Controller\nThe controller property is OPTIONAL. If present, the value MUST\nbe a string or an ordered set of strings that conform to the rules in § 3.1 DID Syntax. The corresponding DID document(s) SHOULD\ncontain verification relationships that explicitly permit the use of\ncertain verification methods for specific purposes.\n          ",
  "5.1.2 DID Controller\nWhen a controller property is present in a DID\ndocument, its value expresses one or more DIDs. Any verification\nmethods contained in the DID documents for those DIDs SHOULD\nbe accepted as authoritative, such that proofs that satisfy those\nverification methods are to be considered equivalent to proofs provided\nby the DID subject.\n        ",
  "5.1.3 Also Known As\nThe alsoKnownAs property is OPTIONAL. If present, the value MUST\nbe an ordered set where each item in the\nset is a URI conforming to [RFC3986].\n          ",
  "5.2 Verification Methods\nThe verificationMethod property is OPTIONAL. If present, the value\nMUST be an ordered set of verification\nmethods, where each verification method is expressed using a map. The verification method map MUST include the id,\ntype, controller, and specific verification material\nproperties that are determined by the value of type and are defined\nin § 5.2.1 Verification Material. A verification method MAY\ninclude additional properties. Verification methods SHOULD be registered\nin the DID Specification Registries [DID-SPEC-REGISTRIES].\n          ",
  "5.2 Verification Methods\nThe verificationMethod property is OPTIONAL. If present, the value\nMUST be an ordered set of verification\nmethods, where each verification method is expressed using a map. The verification method map MUST include the id,\ntype, controller, and specific verification material\nproperties that are determined by the value of type and are defined\nin § 5.2.1 Verification Material. A verification method MAY\ninclude additional properties. Verification methods SHOULD be registered\nin the DID Specification Registries [DID-SPEC-REGISTRIES].\n          ",
  "5.2 Verification Methods\nThe verificationMethod property is OPTIONAL. If present, the value\nMUST be an ordered set of verification\nmethods, where each verification method is expressed using a map. The verification method map MUST include the id,\ntype, controller, and specific verification material\nproperties that are determined by the value of type and are defined\nin § 5.2.1 Verification Material. A verification method MAY\ninclude additional properties. Verification methods SHOULD be registered\nin the DID Specification Registries [DID-SPEC-REGISTRIES].\n          ",
  "5.2 Verification Methods\nThe value of the id property for a verification\nmethod MUST be a string that conforms to the\nrules in Section § 3.2 DID URL Syntax.\n              ",
  "5.2 Verification Methods\nThe value of the type property MUST be exactly one verification\nmethod type. In order to maximize global interoperability, the\nverification method type SHOULD be registered in the DID Specification\nRegistries [DID-SPEC-REGISTRIES].\n            ",
  "5.2 Verification Methods\nThe value of the type property MUST be exactly one verification\nmethod type. In order to maximize global interoperability, the\nverification method type SHOULD be registered in the DID Specification\nRegistries [DID-SPEC-REGISTRIES].\n            ",
  "5.2 Verification Methods\nThe value of the controller property MUST be a string that conforms to the rules in Section § 3.1 DID Syntax.\n            ",
  "5.2.1 Verification Material\nThe publicKeyBase58 property is OPTIONAL. This feature is\nnon-normative. If present, the value MUST be a string representation of a [BASE58] encoded\npublic key.\n            ",
  "5.2.1 Verification Material\nThe publicKeyJwk property is OPTIONAL. If present, the value MUST\nbe a map representing a JSON Web Key that\nconforms to [RFC7517]. The map MUST NOT\ncontain \"d\", or any other members of the private information class as described\nin Registration\nTemplate. It is RECOMMENDED that verification methods that use JWKs\n[RFC7517] to represent their public keys use the value of kid as\ntheir fragment identifier. It is RECOMMENDED that JWK\nkid values are set to the public key fingerprint [RFC7638]. See\nthe first key in Example 13 for\nan example of a public key with a compound key identifier.\n            ",
  "5.2.1 Verification Material\nThe publicKeyJwk property is OPTIONAL. If present, the value MUST\nbe a map representing a JSON Web Key that\nconforms to [RFC7517]. The map MUST NOT\ncontain \"d\", or any other members of the private information class as described\nin Registration\nTemplate. It is RECOMMENDED that verification methods that use JWKs\n[RFC7517] to represent their public keys use the value of kid as\ntheir fragment identifier. It is RECOMMENDED that JWK\nkid values are set to the public key fingerprint [RFC7638]. See\nthe first key in Example 13 for\nan example of a public key with a compound key identifier.\n            ",
  "5.2.1 Verification Material\nThe publicKeyJwk property is OPTIONAL. If present, the value MUST\nbe a map representing a JSON Web Key that\nconforms to [RFC7517]. The map MUST NOT\ncontain \"d\", or any other members of the private information class as described\nin Registration\nTemplate. It is RECOMMENDED that verification methods that use JWKs\n[RFC7517] to represent their public keys use the value of kid as\ntheir fragment identifier. It is RECOMMENDED that JWK\nkid values are set to the public key fingerprint [RFC7638]. See\nthe first key in Example 13 for\nan example of a public key with a compound key identifier.\n            ",
  "5.2.1 Verification Material\nThe publicKeyJwk property is OPTIONAL. If present, the value MUST\nbe a map representing a JSON Web Key that\nconforms to [RFC7517]. The map MUST NOT\ncontain \"d\", or any other members of the private information class as described\nin Registration\nTemplate. It is RECOMMENDED that verification methods that use JWKs\n[RFC7517] to represent their public keys use the value of kid as\ntheir fragment identifier. It is RECOMMENDED that JWK\nkid values are set to the public key fingerprint [RFC7638]. See\nthe first key in Example 13 for\nan example of a public key with a compound key identifier.\n            ",
  "5.2.1 Verification Material\nA verification method MUST NOT contain multiple verification material\nproperties for the same material. For example, expressing key material in a\nverification method using both publicKeyJwk and\npublicKeyBase58 at the same time is prohibited.\n        ",
  "5.3 Verification Relationships\nThe following sections define several useful verification relationships.\nA DID document MAY include any of these, or other properties, to\nexpress a specific verification relationship. In order to maximize global\ninteroperability, any such properties used SHOULD be registered in the DID\nSpecification Registries [DID-SPEC-REGISTRIES].\n      ",
  "5.3.1 Authentication\nThe authentication property is OPTIONAL. If present, the associated\nvalue MUST be an ordered set of one or more\nverification methods. Each verification method MAY be embedded or\nreferenced.\n          ",
  "5.3.2 Assertion\nThe assertionMethod property is OPTIONAL. If present, the\nassociated value MUST be an ordered set of\none or more verification methods. Each verification method MAY be\nembedded or referenced.\n          ",
  "5.3.3 Key Agreement\nThe keyAgreement property is OPTIONAL. If present, the associated\nvalue MUST be an ordered set of one or more\nverification methods. Each verification method MAY be embedded or\nreferenced.\n          ",
  "5.3.4 Capability Invocation\nThe capabilityInvocation property is OPTIONAL. If present, the\nassociated value MUST be an ordered set of\none or more verification methods. Each verification method MAY be\nembedded or referenced.\n          ",
  "5.3.5 Capability Delegation\nThe capabilityDelegation property is OPTIONAL. If present, the\nassociated value MUST be an ordered set of\none or more verification methods. Each verification method MAY be\nembedded or referenced.\n          ",
  "5.4 Services\nThe service property is OPTIONAL. If present, the associated value\nMUST be an ordered set of services,\nwhere each service is described by a map.\nEach service map MUST contain\nid, type, and\nserviceEndpoint properties. Each service extension MAY\ninclude additional properties and MAY further restrict the properties associated\nwith the extension.\n          ",
  "5.4 Services\nThe service property is OPTIONAL. If present, the associated value\nMUST be an ordered set of services,\nwhere each service is described by a map.\nEach service map MUST contain\nid, type, and\nserviceEndpoint properties. Each service extension MAY\ninclude additional properties and MAY further restrict the properties associated\nwith the extension.\n          ",
  "5.4 Services\nThe value of the id property MUST be a URI conforming to\n[RFC3986]. A conforming producer MUST NOT produce\nmultiple service entries with the same id.\nA conforming consumer MUST produce an error if it detects\nmultiple service entries with the same id.\n            ",
  "5.4 Services\nThe value of the id property MUST be a URI conforming to\n[RFC3986]. A conforming producer MUST NOT produce\nmultiple service entries with the same id.\nA conforming consumer MUST produce an error if it detects\nmultiple service entries with the same id.\n            ",
  "5.4 Services\nThe value of the id property MUST be a URI conforming to\n[RFC3986]. A conforming producer MUST NOT produce\nmultiple service entries with the same id.\nA conforming consumer MUST produce an error if it detects\nmultiple service entries with the same id.\n            ",
  "5.4 Services\nThe value of the type property MUST be a string or an ordered set of strings.  In order to maximize interoperability,\nthe verification method type and  its associated properties SHOULD be\nregistered in the DID Specification Registries [DID-SPEC-REGISTRIES].\n          ",
  "5.4 Services\nThe value of the type property MUST be a string or an ordered set of strings.  In order to maximize interoperability,\nthe verification method type and  its associated properties SHOULD be\nregistered in the DID Specification Registries [DID-SPEC-REGISTRIES].\n          ",
  "5.4 Services\nThe value of the serviceEndpoint property MUST be a string, a map, or\nan ordered set composed of one or more strings and/or maps. All string\nvalues MUST be valid URIs conforming to [RFC3986] and normalized\naccording to the Normalization and Comparison\nrules in RFC3986 and to any normalization rules in its applicable URI\nscheme specification.\n          ",
  "5.4 Services\nThe value of the serviceEndpoint property MUST be a string, a map, or\nan ordered set composed of one or more strings and/or maps. All string\nvalues MUST be valid URIs conforming to [RFC3986] and normalized\naccording to the Normalization and Comparison\nrules in RFC3986 and to any normalization rules in its applicable URI\nscheme specification.\n          ",
  "6.1 Production and Consumption\nA representation MUST define deterministic production and consumption\nrules for all data types specified in § 4. Data Model.\n        ",
  "6.1 Production and Consumption\nA representation MUST be uniquely associated with an IANA-registered\nMedia Type.\n        ",
  "6.1 Production and Consumption\nA representation MUST define fragment processing rules for its Media\nType that are conformant with the fragment processing rules defined in\n§ Fragment.\n        ",
  "6.1 Production and Consumption\nA representation SHOULD use the lexical representation of data model data types. For example, JSON and JSON-LD use\nthe XML Schema dateTime lexical serialization to represent\ndatetimes. A representation MAY choose to serialize the data model data types using a different lexical\nserializations as long as the consumption process back into the data model is lossless. For example, some CBOR-based\nrepresentations express datetime values using integers to\nrepresent the number of seconds since the Unix epoch.\n        ",
  "6.1 Production and Consumption\nIn order to maximize interoperability, representation specification\nauthors SHOULD register their representation in the DID Specification\nRegistries [DID-SPEC-REGISTRIES].\n        ",
  "6.1 Production and Consumption\nA conforming producer MUST serialize all entries in the data model that do not have explicit processing rules for\nthe representation being produced using only the representation's\ndata type processing rules.\n        ",
  "6.1 Production and Consumption\nA conforming producer MUST indicate which representation has been\nused for a DID document via a Media Type as described in § 7.1.2 DID Resolution Metadata.\n        ",
  "6.1 Production and Consumption\nA conforming consumer MUST add all entries that do not have explicit\nprocessing rules for the representation being consumed to the data model using only the representation's data\ntype processing rules.\n        ",
  "6.1 Production and Consumption\nA conforming consumer MUST determine the representation of a\nDID document using the associated Media Type as described in § 7.1.2 DID Resolution Metadata.\n        ",
  "6.2.1 Production\nThe DID document and any DID document data structures expressed by the data model\nMUST be serialized to the JSON representation according to the\nfollowing production rules:\n        \n          \n            \n              \nData Type\n              \n              \nJSON Representation Type\n              \n            \n          \n\n          \n            \n              \nordered map\n              \n              \nA JSON Object, where each entry is\nserialized as a member of the JSON Object with the entry key as a JSON String member name and the entry value\naccording to its type, as defined in this table.\n              \n            \n            \n              \nlist\n              \n              \nA JSON Array, where each element of the\nlist is serialized, in order, as a value of the array according to its type, as\ndefined in this table.\n              \n            \n            \n              \nordered set\n              \n              \nA JSON Array, where each element of the set\nis added, in order, as a value of the array according to its type, as defined in\nthis table.\n              \n            \n            \n              \ndatetime\n              \n              \nA JSON String serialized as an\nXML Datetime normalized to\nUTC 00:00:00 and without sub-second decimal precision. For example:\n2020-12-20T19:17:47Z.\n              \n            \n            \n              \nstring\n              \n              \nA JSON String.\n              \n            \n            \n              \ninteger\n              \n              \nA JSON Number without a decimal or\nfractional component.\n              \n            \n            \n              \ndouble\n              \n              \nA JSON Number with a decimal and\nfractional component.\n              \n            \n            \n              \nboolean\n              \n              \nA JSON Boolean.\n              \n            \n            \n              \nnull\n              \n              \nA JSON null literal.\n              \n            \n          \n        ",
  "6.2.1 Production\nAll entries of a DID document MUST be included in the root JSON Object. Entries MAY contain additional\ndata substructures subject to the value representation rules in the list above.\nWhen serializing a DID document, a conforming producer MUST\nspecify a media type of application/did+json to downstream\napplications such as described in § 7.1.2 DID Resolution Metadata.\n        ",
  "6.2.1 Production\nAll entries of a DID document MUST be included in the root JSON Object. Entries MAY contain additional\ndata substructures subject to the value representation rules in the list above.\nWhen serializing a DID document, a conforming producer MUST\nspecify a media type of application/did+json to downstream\napplications such as described in § 7.1.2 DID Resolution Metadata.\n        ",
  "6.2.2 Consumption\nThe DID document and any DID document data structures expressed by a JSON representation MUST be\ndeserialized into the data model according to the\nfollowing consumption rules:\n        \n          \n            \n              \nJSON Representation Type\n              \n              \nData Type\n              \n            \n          \n\n          \n            \n              \nJSON Object\n              \n              \nAn ordered map, where each member of the JSON\nObject is added as an entry to the ordered map. Each entry key is set as the\nJSON Object member name. Each entry value is set by converting the JSON Object\nmember value according to the JSON representation type as defined in this table.\nSince order is not specified by JSON Objects, no insertion order is guaranteed.\n              \n            \n            \n              \nJSON Array where the data model entry value is a list or unknown\n              \n              \nA list, where each value of the JSON Array is\nadded to the list in order, converted based on the JSON representation type of\nthe array value, as defined in this table.\n              \n            \n            \n              \nJSON Array where the data model entry value is an ordered set\n              \n              \nAn ordered set, where each value of\nthe JSON Array is added to the ordered set in order, converted based on the JSON\nrepresentation type of the array value, as defined in this table.\n              \n            \n            \n              \nJSON String where data model entry value is a datetime\n              \n              \nA datetime.\n              \n            \n            \n              \nJSON String, where the data model entry value type is string or\nunknown\n              \n              \nA string.\n              \n            \n            \n              \nJSON Number without a decimal or\nfractional component\n              \n              \nAn integer.\n              \n            \n            \n              \nJSON Number with a decimal and fractional\ncomponent, or when entry value is a double regardless of inclusion of\nfractional component\n              \n              \nA double.\n              \n            \n            \n              \nJSON Boolean\n              \n              \nA boolean.\n              \n            \n            \n              \nJSON null literal\n              \n              \nA null value.\n              \n            \n          \n        ",
  "6.2.2 Consumption\nIf media type information is available to a conforming consumer and the\nmedia type value is application/did+json, then the data structure\nbeing consumed is a DID document, and the root element MUST be a JSON Object where all members of the object\nare entries of the DID document. A conforming consumer for a JSON\nrepresentation that is consuming a DID document with a root\nelement that is not a JSON Object MUST\nreport an error.\n        ",
  "6.2.2 Consumption\nIf media type information is available to a conforming consumer and the\nmedia type value is application/did+json, then the data structure\nbeing consumed is a DID document, and the root element MUST be a JSON Object where all members of the object\nare entries of the DID document. A conforming consumer for a JSON\nrepresentation that is consuming a DID document with a root\nelement that is not a JSON Object MUST\nreport an error.\n        ",
  "6.3.1 Production\nThe DID document and any DID document data structures expressed by the data model MUST\nbe serialized to the JSON-LD representation according to the JSON\nrepresentation production rules as defined in § 6.2 JSON.\n        ",
  "6.3.1 Production\nIn addition to using the JSON representation production rules,\nJSON-LD production MUST include the representation-specific\n@context entry. The serialized value of\n@context MUST be the JSON\nString https://www.w3.org/ns/did/v1, or a JSON Array where the first item is the JSON String\nhttps://www.w3.org/ns/did/v1 and the subsequent items are\nserialized according to the JSON representation production\nrules.\n        ",
  "6.3.1 Production\nIn addition to using the JSON representation production rules,\nJSON-LD production MUST include the representation-specific\n@context entry. The serialized value of\n@context MUST be the JSON\nString https://www.w3.org/ns/did/v1, or a JSON Array where the first item is the JSON String\nhttps://www.w3.org/ns/did/v1 and the subsequent items are\nserialized according to the JSON representation production\nrules.\n        ",
  "6.3.1 Production\nIn order to achieve interoperability across different representations,\nall JSON-LD Contexts and their terms SHOULD be registered in the DID\nSpecification Registries [DID-SPEC-REGISTRIES].\n        ",
  "6.3.1 Production\nA conforming producer that generates a JSON-LD representation\nSHOULD NOT produce a DID document that contains terms not defined\nvia the @context as conforming consumers are expected\nto remove unknown terms. When serializing a JSON-LD representation of a DID\ndocument, a conforming producer MUST specify a media type of\napplication/did+ld+json to downstream applications such as\ndescribed in § 7.1.2 DID Resolution Metadata.\n        ",
  "6.3.1 Production\nA conforming producer that generates a JSON-LD representation\nSHOULD NOT produce a DID document that contains terms not defined\nvia the @context as conforming consumers are expected\nto remove unknown terms. When serializing a JSON-LD representation of a DID\ndocument, a conforming producer MUST specify a media type of\napplication/did+ld+json to downstream applications such as\ndescribed in § 7.1.2 DID Resolution Metadata.\n        ",
  "6.3.2 Consumption\nThe DID document and any DID document data structures expressed by a\nJSON-LD representation MUST be deserialized into the data model according to the JSON representation\nconsumption rules as defined in § 6.2 JSON.\n        ",
  "6.3.2 Consumption\nIn addition to using the JSON representation consumption rules,\nJSON-LD consumption MUST add the representation-specific entries into\nthe data model according to the\nJSON representation consumption rules.\n        ",
  "6.3.2 Consumption\nConforming consumers that process a JSON-LD representation SHOULD\ndrop all terms from a DID document that are not defined via the\n@context.\n        ",
  "6.4.1 Production\nAll DID document data structures expressed by the data model MUST be serialized to the CBOR\nrepresentation according to the following production rules:\n        \n          \n            \n              \nData Type\n              \n              \nCBOR Representation Type\n              \n            \n          \n\n          \n            \n              \nordered map\n              \n              \nA CBOR map (major type 5), where each\nentry is represented as a member of the CBOR map. The entry key is expressed\nas a CBOR string (major type 3) as the\nkey, and the entry value according to its type, as defined in this table.\n              \n            \n            \n              \nlist\n              \n              \nA CBOR array (major type 4), where each\nelement of the list is added, in order, as a value of the array according to its\ntype, as defined in this table.\n              \n            \n            \n              \nordered set\n              \n              \nA CBOR array (major type 4), where each\nelement of the list is added, in order, as a value of the array according to its\ntype, as defined in this table.\n              \n            \n            \n              \ndatetime\n              \n              \nA CBOR string (major type 3) formatted as\nan XML Datetime normalized to\nUTC 00:00 and without sub-second decimal precision. For example:\n2020-12-20T19:17:47Z.\n              \n            \n            \n              \nstring\n              \n              \nA CBOR string (major type 3).\n              \n            \n            \n              \ninteger\n              \n              \nA CBOR integer (major type 0 or 1),\nchoosing the shortest byte representation.\n              \n            \n            \n              \ndouble\n              \n              \nA CBOR floating-point number (major type\n7). All floating point values MUST be encoded as 64-bits (additional type\nvalue 27), even for integral values.\n              \n            \n            \n              \nboolean\n              \n              \nA CBOR simple value (major type 7,\nsubtype 24) with a simple value of 21 (true) or 20 (false).\n              \n            \n            \n              \nnull\n              \n              \nA CBOR simple value (major type 7,\nsubtype 24) with a simple value of 22 (null).\n              \n            \n          \n        ",
  "6.4.1 Production\nA CBOR floating-point number (major type\n7). All floating point values MUST be encoded as 64-bits (additional type\nvalue 27), even for integral values.\n              ",
  "6.4.1 Production\nIndefinite-length items are not allowed and MUST be made a CBOR definite length.\n          ",
  "6.4.1 Production\nAll CBOR tags MUST be retained regardless of whether they are optional.\n          ",
  "6.4.1 Production\nAll four Canonical CBOR rules\nlisted in [RFC8949] MUST be applied to all relevant data types.\n          ",
  "6.4.1 Production\nAll entries of a DID document MUST be included in the root CBOR map (major type 5). Entries MAY contain\nadditional data substructures subject to the value representation rules in the\nlist above. When serializing a DID document to its CBOR\nrepresentation, a conforming producer MUST specify a media type of\napplication/did+cbor to downstream applications such as described\nin § 7.1.2 DID Resolution Metadata.\n        ",
  "6.4.1 Production\nAll entries of a DID document MUST be included in the root CBOR map (major type 5). Entries MAY contain\nadditional data substructures subject to the value representation rules in the\nlist above. When serializing a DID document to its CBOR\nrepresentation, a conforming producer MUST specify a media type of\napplication/did+cbor to downstream applications such as described\nin § 7.1.2 DID Resolution Metadata.\n        ",
  "6.4.2 Consumption\nAll data structures expressed by a CBOR representation MUST be\ndeserialized into the data model according to the\nfollowing consumption rules:\n        \n          \n            \n              \nCBOR Representation Type\n              \n              \nData Type\n              \n            \n          \n\n          \n            \n              \nCBOR map (major type 5)\n              \n              \nAn ordered map, where each data item of the\nCBOR map is added as an entry to the ordered map with the entry key being the\ndata item name and the value converted based on the CBOR type and, if available,\nentry definition, as defined here; as no order can be enforced for general CBOR\nmaps, no insertion order is guaranteed.\n              \n            \n            \n              \nCBOR array (major type 4), where the data model entry value is a list or unknown\n              \n              \nA list, where each value of the CBOR array is added to the list in order,\nconverted based on the CBOR type of the array value, as defined in this table.\n              \n            \n            \n              \nCBOR array (major type 4), where the data model entry value is an ordered set\n              \n              \nAn ordered set, where each value of\nthe CBOR array is added to the ordered\nset in order, converted based on the CBOR type of the array value as defined in\nthis table.\n              \n            \n            \n              \nCBOR string (major type 3) where the\ndata model entry value is a datetime\n              \n              \nA datetime.\n              \n            \n            \n              \nCBOR string (major type 3), where the data model entry value type is string or\nunknown\n              \n              \nA string.\n              \n            \n            \n              \nCBOR integer (major type 0 or 1),\nchoosing the shortest byte representation\n              \n              \nAn integer.\n              \n            \n            \n              \nCBOR floating-point number (major type\n7)\n              \n              \nA double.\n              \n            \n            \n              \nCBOR simple value (major type 7,\nsubtype 24) with a simple value of 21 (True) or 20 (False)\n              \n              \nA boolean.\n              \n            \n            \n              \nCBOR simple value (major type 7,\nsubtype 24) with a simple value of 22 (Null)\n              \n              \nA null value.\n              \n            \n          \n        ",
  "6.4.2 Consumption\nCBOR\nindefinite-length items are not allowed and MUST produce an error.\n          ",
  "6.4.2 Consumption\nA duplicate key in the same CBOR map MUST produce an error.\n          ",
  "6.4.2 Consumption\nAll CBOR tags MUST be retained for CBOR production regardless of whether\nthey are optional.\n          ",
  "6.4.2 Consumption\nIf media type information is available to a conforming consumer and the\nmedia type value is application/did+json, then the data structure\nbeing consumed is a DID document, and the root element MUST be a CBOR map (major type 5) where all members of\nthe object are entries of the DID document. A conforming consumer\nfor a CBOR representation that is consuming a DID document with a\nroot element that is not a CBOR map\n(major type 5) MUST report an error.\n        ",
  "6.4.2 Consumption\nIf media type information is available to a conforming consumer and the\nmedia type value is application/did+json, then the data structure\nbeing consumed is a DID document, and the root element MUST be a CBOR map (major type 5) where all members of\nthe object are entries of the DID document. A conforming consumer\nfor a CBOR representation that is consuming a DID document with a\nroot element that is not a CBOR map\n(major type 5) MUST report an error.\n        ",
  "7. Resolution\nAll conformant DID resolvers MUST implement the DID resolution\nfunctions for at least one DID method and MUST be able to return a\nDID document in at least one conformant representation.\n    ",
  "7. Resolution\nAll conformant DID resolvers MUST implement the DID resolution\nfunctions for at least one DID method and MUST be able to return a\nDID document in at least one conformant representation.\n    ",
  "7.1 DID Resolution\nThis is the DID to resolve. This input is REQUIRED and the value MUST\nbe a conformant DID as defined in § 3.1 DID Syntax.\n            ",
  "7.1 DID Resolution\nA metadata structure containing properties\ndefined in § 7.1.1 DID Resolution Options. This input is\nREQUIRED, but the structure MAY be empty.\n            ",
  "7.1 DID Resolution\nA metadata structure consisting of values\nrelating to the results of the DID resolution process which typically\nchanges between invocations of the resolve and\nresolveRepresentation functions, as it represents data about the\nresolution process itself. This structure is REQUIRED, and MUST NOT be empty.\nThis metadata is defined by § 7.1.2 DID Resolution Metadata. If\nresolveRepresentation was called, this structure MUST contain a\ncontentType property containing the Media Type of the\nrepresentation found in the didDocumentStream. If the resolution is not successful, this structure\nMUST contain an error property describing the error.\n            ",
  "7.1 DID Resolution\nA metadata structure consisting of values\nrelating to the results of the DID resolution process which typically\nchanges between invocations of the resolve and\nresolveRepresentation functions, as it represents data about the\nresolution process itself. This structure is REQUIRED, and MUST NOT be empty.\nThis metadata is defined by § 7.1.2 DID Resolution Metadata. If\nresolveRepresentation was called, this structure MUST contain a\ncontentType property containing the Media Type of the\nrepresentation found in the didDocumentStream. If the resolution is not successful, this structure\nMUST contain an error property describing the error.\n            ",
  "7.1 DID Resolution\nA metadata structure consisting of values\nrelating to the results of the DID resolution process which typically\nchanges between invocations of the resolve and\nresolveRepresentation functions, as it represents data about the\nresolution process itself. This structure is REQUIRED, and MUST NOT be empty.\nThis metadata is defined by § 7.1.2 DID Resolution Metadata. If\nresolveRepresentation was called, this structure MUST contain a\ncontentType property containing the Media Type of the\nrepresentation found in the didDocumentStream. If the resolution is not successful, this structure\nMUST contain an error property describing the error.\n            ",
  "7.1 DID Resolution\nIf the resolution is successful, and if the resolve function was\ncalled, this MUST be a DID document abstract data model (a map) as described in § 4. Data Model that\nis capable of being transformed into a conforming DID Document\n(representation), using the production rules specified by the representation.\nThe value of id in the resolved DID document MUST\nmatch the DID that was resolved. If the resolution is unsuccessful, this\nvalue MUST be empty.\n            ",
  "7.1 DID Resolution\nIf the resolution is successful, and if the resolve function was\ncalled, this MUST be a DID document abstract data model (a map) as described in § 4. Data Model that\nis capable of being transformed into a conforming DID Document\n(representation), using the production rules specified by the representation.\nThe value of id in the resolved DID document MUST\nmatch the DID that was resolved. If the resolution is unsuccessful, this\nvalue MUST be empty.\n            ",
  "7.1 DID Resolution\nIf the resolution is successful, and if the resolve function was\ncalled, this MUST be a DID document abstract data model (a map) as described in § 4. Data Model that\nis capable of being transformed into a conforming DID Document\n(representation), using the production rules specified by the representation.\nThe value of id in the resolved DID document MUST\nmatch the DID that was resolved. If the resolution is unsuccessful, this\nvalue MUST be empty.\n            ",
  "7.1 DID Resolution\nIf the resolution is successful, and if the resolveRepresentation\nfunction was called, this MUST be a byte stream of the resolved DID\ndocument in one of the conformant\nrepresentations. The byte stream might then be\nparsed by the caller of the resolveRepresentation function into a\ndata model, which can in turn be validated and\nprocessed. If the resolution is unsuccessful, this value MUST be an empty\nstream.\n            ",
  "7.1 DID Resolution\nIf the resolution is successful, and if the resolveRepresentation\nfunction was called, this MUST be a byte stream of the resolved DID\ndocument in one of the conformant\nrepresentations. The byte stream might then be\nparsed by the caller of the resolveRepresentation function into a\ndata model, which can in turn be validated and\nprocessed. If the resolution is unsuccessful, this value MUST be an empty\nstream.\n            ",
  "7.1 DID Resolution\nIf the resolution is successful, this MUST be a metadata structure. This structure contains\nmetadata about the DID document contained in the didDocument\nproperty. This metadata typically does not change between invocations of the\nresolve and resolveRepresentation functions unless the\nDID document changes, as it represents metadata about the DID\ndocument. If the resolution is unsuccessful, this output MUST be an empty metadata structure. Properties defined by this\nspecification are in § 7.1.3 DID Document Metadata.\n            ",
  "7.1 DID Resolution\nIf the resolution is successful, this MUST be a metadata structure. This structure contains\nmetadata about the DID document contained in the didDocument\nproperty. This metadata typically does not change between invocations of the\nresolve and resolveRepresentation functions unless the\nDID document changes, as it represents metadata about the DID\ndocument. If the resolution is unsuccessful, this output MUST be an empty metadata structure. Properties defined by this\nspecification are in § 7.1.3 DID Document Metadata.\n            ",
  "7.1.1 DID Resolution Options\nThe Media Type of the caller's preferred representation of the DID\ndocument. The Media Type MUST be expressed as an  ASCII string. The DID resolver implementation SHOULD use this\nvalue to determine the representation contained in the returned\ndidDocumentStream if such a representation is supported and\navailable. This property is OPTIONAL for the resolveResolution\nfunction and MUST NOT be used with the resolve function.\n                ",
  "7.1.1 DID Resolution Options\nThe Media Type of the caller's preferred representation of the DID\ndocument. The Media Type MUST be expressed as an  ASCII string. The DID resolver implementation SHOULD use this\nvalue to determine the representation contained in the returned\ndidDocumentStream if such a representation is supported and\navailable. This property is OPTIONAL for the resolveResolution\nfunction and MUST NOT be used with the resolve function.\n                ",
  "7.1.1 DID Resolution Options\nThe Media Type of the caller's preferred representation of the DID\ndocument. The Media Type MUST be expressed as an  ASCII string. The DID resolver implementation SHOULD use this\nvalue to determine the representation contained in the returned\ndidDocumentStream if such a representation is supported and\navailable. This property is OPTIONAL for the resolveResolution\nfunction and MUST NOT be used with the resolve function.\n                ",
  "7.1.2 DID Resolution Metadata\nThe Media Type of the returned didDocumentStream. This property is\nREQUIRED if resolution is successful and if the\nresolveRepresentation function was called.\nThis property MUST NOT\nbe present if the resolve function was called. The value of this\nproperty MUST be an ASCII string that is the Media\nType of the conformant representations. The\ncaller of the resolveRepresentation function MUST use this value\nwhen determining how to parse and process the didDocumentStream\nreturned by this function into the data model.\n                ",
  "7.1.2 DID Resolution Metadata\nThe Media Type of the returned didDocumentStream. This property is\nREQUIRED if resolution is successful and if the\nresolveRepresentation function was called.\nThis property MUST NOT\nbe present if the resolve function was called. The value of this\nproperty MUST be an ASCII string that is the Media\nType of the conformant representations. The\ncaller of the resolveRepresentation function MUST use this value\nwhen determining how to parse and process the didDocumentStream\nreturned by this function into the data model.\n                ",
  "7.1.2 DID Resolution Metadata\nThe Media Type of the returned didDocumentStream. This property is\nREQUIRED if resolution is successful and if the\nresolveRepresentation function was called.\nThis property MUST NOT\nbe present if the resolve function was called. The value of this\nproperty MUST be an ASCII string that is the Media\nType of the conformant representations. The\ncaller of the resolveRepresentation function MUST use this value\nwhen determining how to parse and process the didDocumentStream\nreturned by this function into the data model.\n                ",
  "7.1.2 DID Resolution Metadata\nThe Media Type of the returned didDocumentStream. This property is\nREQUIRED if resolution is successful and if the\nresolveRepresentation function was called.\nThis property MUST NOT\nbe present if the resolve function was called. The value of this\nproperty MUST be an ASCII string that is the Media\nType of the conformant representations. The\ncaller of the resolveRepresentation function MUST use this value\nwhen determining how to parse and process the didDocumentStream\nreturned by this function into the data model.\n                ",
  "7.1.2 DID Resolution Metadata\nThe error code from the resolution process. This property is REQUIRED when there\nis an error in the resolution process. The value of this property MUST be a\nsingle keyword ASCII string. The possible property\nvalues of this field SHOULD be registered in the DID Specification Registries\n[DID-SPEC-REGISTRIES]. This specification defines the following\ncommon error values:\n                    \n                        \ninvalidDid\n                        \n                        \nThe DID supplied to the DID resolution function does not conform\nto valid syntax. (See § 3.1 DID Syntax.)\n                        \n                        \nnotFound\n                        \n                        \nThe DID resolver was unable to find the DID document\nresulting from this resolution request.\n                        \n                        \nrepresentationNotSupported\n                        \n                        \nThis error code is returned if the representation requested via the\naccept input metadata property is not supported by the DID\nmethod and/or DID resolver implementation.\n                        \n                        \ndeactivated\n                        \n                        \nThe DID supplied to the DID resolution function has been\ndeactivated as described in § 8.2 Method Operations.\n                        \n                    \n                ",
  "7.1.2 DID Resolution Metadata\nThe error code from the resolution process. This property is REQUIRED when there\nis an error in the resolution process. The value of this property MUST be a\nsingle keyword ASCII string. The possible property\nvalues of this field SHOULD be registered in the DID Specification Registries\n[DID-SPEC-REGISTRIES]. This specification defines the following\ncommon error values:\n                    \n                        \ninvalidDid\n                        \n                        \nThe DID supplied to the DID resolution function does not conform\nto valid syntax. (See § 3.1 DID Syntax.)\n                        \n                        \nnotFound\n                        \n                        \nThe DID resolver was unable to find the DID document\nresulting from this resolution request.\n                        \n                        \nrepresentationNotSupported\n                        \n                        \nThis error code is returned if the representation requested via the\naccept input metadata property is not supported by the DID\nmethod and/or DID resolver implementation.\n                        \n                        \ndeactivated\n                        \n                        \nThe DID supplied to the DID resolution function has been\ndeactivated as described in § 8.2 Method Operations.\n                        \n                    \n                ",
  "7.1.3 DID Document Metadata\nThe possible properties within this structure and their possible values SHOULD\nbe registered in the DID Specification Registries [DID-SPEC-REGISTRIES].\nThis specification defines the following common properties.\n          ",
  "7.1.3 DID Document Metadata\nDID document metadata SHOULD include a created property to\nindicate the timestamp of the Create operation.\nThe value of the property MUST be a string\nformatted as an XML Datetime\nnormalized to UTC 00:00:00 and without sub-second decimal precision. For\nexample: 2020-12-20T19:17:47Z.\n            ",
  "7.1.3 DID Document Metadata\nDID document metadata SHOULD include a created property to\nindicate the timestamp of the Create operation.\nThe value of the property MUST be a string\nformatted as an XML Datetime\nnormalized to UTC 00:00:00 and without sub-second decimal precision. For\nexample: 2020-12-20T19:17:47Z.\n            ",
  "7.1.3 DID Document Metadata\nDID document metadata SHOULD include an updated property to\nindicate the timestamp of the last Update\noperation for the document version which was resolved. The value of the\nproperty MUST follow the same formatting rules as the created\nproperty. The updated property is omitted if an Update operation\nhas never been performed on the DID document. If an updated\nproperty exists, it can be the same value as the created property\nwhen the difference between the two timestamps is less than one second.\n            ",
  "7.1.3 DID Document Metadata\nDID document metadata SHOULD include an updated property to\nindicate the timestamp of the last Update\noperation for the document version which was resolved. The value of the\nproperty MUST follow the same formatting rules as the created\nproperty. The updated property is omitted if an Update operation\nhas never been performed on the DID document. If an updated\nproperty exists, it can be the same value as the created property\nwhen the difference between the two timestamps is less than one second.\n            ",
  "7.1.3 DID Document Metadata\n              (Feature at Risk) Issue\nThe DID Working Group is seeking implementer feedback on this feature. If there\nis not enough implementation experience with this feature at the end of the\nCandidate Recommendation period, it will be removed from the specification.\n              \n\nDID document metadata MAY include a nextUpdate property if\nthe resolved document version is not the latest version of the document. It\nindicates the timestamp of the next Update\noperation. The value of the property MUST follow the same formatting rules\nas the created property.\n            ",
  "7.1.3 DID Document Metadata\nDID document metadata SHOULD include a versionId property to\nindicate the version of the last Update\noperation for the document version which was resolved. The value of the\nproperty MUST be an ASCII string.\n            ",
  "7.1.3 DID Document Metadata\nDID document metadata SHOULD include a versionId property to\nindicate the version of the last Update\noperation for the document version which was resolved. The value of the\nproperty MUST be an ASCII string.\n            ",
  "7.1.3 DID Document Metadata\n              (Feature at Risk) Issue\nThe DID Working Group is seeking implementer feedback on this feature. If there\nis not enough implementation experience with this feature at the end of the\nCandidate Recommendation period, it will be removed from the specification.\n              \n\nDID document metadata MAY include a nextVersionId property\nif the resolved document version is not the latest version of the document. It\nindicates the version of the next Update\noperation. The value of the property MUST be an ASCII string.\n            ",
  "7.1.3 DID Document Metadata\nThe value of equivalentId MUST be an ordered set where each item in the list is a\nstring that conforms to the rules in Section § 3.1 DID Syntax. The relationship is a statement that each\nequivalentId value is logically equivalent to the\nid property value and thus identifies the same DID subject.\nEach equivalentId DID value MUST be produced by, and a form\nof, the same DID Method as the id property value. (e.g.,\ndid:example:abc == did:example:ABC)\n                  ",
  "7.1.3 DID Document Metadata\nThe value of equivalentId MUST be an ordered set where each item in the list is a\nstring that conforms to the rules in Section § 3.1 DID Syntax. The relationship is a statement that each\nequivalentId value is logically equivalent to the\nid property value and thus identifies the same DID subject.\nEach equivalentId DID value MUST be produced by, and a form\nof, the same DID Method as the id property value. (e.g.,\ndid:example:abc == did:example:ABC)\n                  ",
  "7.1.3 DID Document Metadata\nA conforming DID Method specification MUST guarantee that each\nequivalentId value is logically equivalent to the\nid property value.\n            \n            \nA requesting party is expected to retain the values from the id and\nequivalentId properties to ensure any subsequent\ninteractions with any of the values they contain are correctly handled as\nlogically equivalent (e.g. retain all variants in a database so an interaction\nwith any one maps to the same underlying account).\n            \n            Note: Stronger equivalence\nequivalentId is a much stronger form of equivalence than\nalsoKnownAs because the equivalence MUST be guaranteed by\nthe governing DID method. equivalentId represents a\nfull graph merge because the same DID document describes both the\nequivalentId DID and the id property\nDID.\n            \n            \nIf a requesting party does not retain the values from the id and\nequivalentId properties and ensure any subsequent\ninteractions with any of the values they contain are correctly handled as\nlogically equivalent, there might be negative or unexpected issues that\narise. Implementers are strongly advised to observe the\ndirectives related to this metadata property.\n              \n            ",
  "7.1.3 DID Document Metadata\nequivalentId is a much stronger form of equivalence than\nalsoKnownAs because the equivalence MUST be guaranteed by\nthe governing DID method. equivalentId represents a\nfull graph merge because the same DID document describes both the\nequivalentId DID and the id property\nDID.\n            ",
  "7.1.3 DID Document Metadata\nThe value of canonicalId MUST be a string that conforms to the rules in Section § 3.1 DID Syntax. The relationship is a statement that the\ncanonicalId value is logically equivalent to the\nid property value and that the canonicalId\nvalue is defined by the DID Method to be the canonical ID for the DID\nsubject in the scope of the containing DID document. A\ncanonicalId value MUST be produced by, and a form of, the\nsame DID Method as the id property value. (e.g.,\ndid:example:abc == did:example:ABC). A conforming\nDID Method specification MUST guarantee that the\ncanonicalId value is logically equivalent to the\nid property value.\n              ",
  "7.1.3 DID Document Metadata\nThe value of canonicalId MUST be a string that conforms to the rules in Section § 3.1 DID Syntax. The relationship is a statement that the\ncanonicalId value is logically equivalent to the\nid property value and that the canonicalId\nvalue is defined by the DID Method to be the canonical ID for the DID\nsubject in the scope of the containing DID document. A\ncanonicalId value MUST be produced by, and a form of, the\nsame DID Method as the id property value. (e.g.,\ndid:example:abc == did:example:ABC). A conforming\nDID Method specification MUST guarantee that the\ncanonicalId value is logically equivalent to the\nid property value.\n              ",
  "7.1.3 DID Document Metadata\nThe value of canonicalId MUST be a string that conforms to the rules in Section § 3.1 DID Syntax. The relationship is a statement that the\ncanonicalId value is logically equivalent to the\nid property value and that the canonicalId\nvalue is defined by the DID Method to be the canonical ID for the DID\nsubject in the scope of the containing DID document. A\ncanonicalId value MUST be produced by, and a form of, the\nsame DID Method as the id property value. (e.g.,\ndid:example:abc == did:example:ABC). A conforming\nDID Method specification MUST guarantee that the\ncanonicalId value is logically equivalent to the\nid property value.\n              ",
  "7.2 DID URL Dereferencing\nA conformant DID URL as a single string. This is the DID URL to\ndereference. To dereference a DID fragment, the complete DID URL\nincluding the DID fragment MUST be used. This input is REQUIRED.\n        ",
  "7.2 DID URL Dereferencing\nA metadata structure consisting of input\noptions to the dereference function in addition to the\ndidUrl itself. Properties defined by this specification are in § 7.2.1 DID URL Dereferencing Options. This input is REQUIRED, but the\nstructure MAY be empty.\n        ",
  "7.2 DID URL Dereferencing\nA metadata structure consisting of values\nrelating to the results of the DID URL dereferencing process. This\nstructure is REQUIRED and in the case of an error in the dereferencing process,\nthis MUST NOT be empty. Properties defined by this specification are in § 7.2.2 DID URL Dereferencing Metadata. If the dereferencing is not\nsuccessful, this structure MUST contain an error property\ndescribing the error.\n        ",
  "7.2 DID URL Dereferencing\nA metadata structure consisting of values\nrelating to the results of the DID URL dereferencing process. This\nstructure is REQUIRED and in the case of an error in the dereferencing process,\nthis MUST NOT be empty. Properties defined by this specification are in § 7.2.2 DID URL Dereferencing Metadata. If the dereferencing is not\nsuccessful, this structure MUST contain an error property\ndescribing the error.\n        ",
  "7.2 DID URL Dereferencing\nIf the dereferencing function was called and successful, this MUST\ncontain a resource corresponding to the DID URL. The\ncontentStream MAY be a resource such as a DID\nDocument that is serializable in one of the conformant\nrepresentations,  a Verification Method,  a service, or any other resource format that can be identified via a Media Type\nand obtained through the resolution process. If the\ndereferencing is unsuccessful, this value MUST be empty.\n        ",
  "7.2 DID URL Dereferencing\nIf the dereferencing function was called and successful, this MUST\ncontain a resource corresponding to the DID URL. The\ncontentStream MAY be a resource such as a DID\nDocument that is serializable in one of the conformant\nrepresentations,  a Verification Method,  a service, or any other resource format that can be identified via a Media Type\nand obtained through the resolution process. If the\ndereferencing is unsuccessful, this value MUST be empty.\n        ",
  "7.2 DID URL Dereferencing\nIf the dereferencing is successful, this MUST be a \nmetadata structure, but the structure MAY be empty. This structure contains\nmetadata about the contentStream. If the contentStream\nis a DID document, this MUST be a didDocumentMetadata structure as\ndescribed in DID Resolution. If the dereferencing is unsuccessful, this\noutput MUST be an empty metadata structure.\n        ",
  "7.2 DID URL Dereferencing\nIf the dereferencing is successful, this MUST be a \nmetadata structure, but the structure MAY be empty. This structure contains\nmetadata about the contentStream. If the contentStream\nis a DID document, this MUST be a didDocumentMetadata structure as\ndescribed in DID Resolution. If the dereferencing is unsuccessful, this\noutput MUST be an empty metadata structure.\n        ",
  "7.2 DID URL Dereferencing\nIf the dereferencing is successful, this MUST be a \nmetadata structure, but the structure MAY be empty. This structure contains\nmetadata about the contentStream. If the contentStream\nis a DID document, this MUST be a didDocumentMetadata structure as\ndescribed in DID Resolution. If the dereferencing is unsuccessful, this\noutput MUST be an empty metadata structure.\n        ",
  "7.2.1 DID URL Dereferencing Options\nThe possible properties within this structure and their possible values SHOULD\nbe registered in the DID Specification Registries [DID-SPEC-REGISTRIES].\nThis specification defines the following common properties for\ndereferencing options:\n            \n              \naccept\n              \n              \nThe Media Type that the caller prefers for contentStream. The Media\nType MUST be expressed as an ASCII string.\nThe DID URL dereferencing implementation SHOULD use this value to\ndetermine the contentType of the representation contained in the returned value if such a\nrepresentation is supported and available.\n              \n            ",
  "7.2.1 DID URL Dereferencing Options\nThe Media Type that the caller prefers for contentStream. The Media\nType MUST be expressed as an ASCII string.\nThe DID URL dereferencing implementation SHOULD use this value to\ndetermine the contentType of the representation contained in the returned value if such a\nrepresentation is supported and available.\n              ",
  "7.2.1 DID URL Dereferencing Options\nThe Media Type that the caller prefers for contentStream. The Media\nType MUST be expressed as an ASCII string.\nThe DID URL dereferencing implementation SHOULD use this value to\ndetermine the contentType of the representation contained in the returned value if such a\nrepresentation is supported and available.\n              ",
  "7.2.2 DID URL Dereferencing Metadata\nThe Media Type of the returned contentStream SHOULD be expressed\nusing this property if dereferencing is successful. The Media\nType value MUST be expressed as an ASCII string.\n                ",
  "7.2.2 DID URL Dereferencing Metadata\nThe error code from the dereferencing process. This property is REQUIRED when\nthere is an error in the dereferencing process. The value of this property\nMUST be a single keyword expressed as an ASCII\nstring. The possible property values of this field SHOULD be registered in\nthe DID Specification Registries [DID-SPEC-REGISTRIES]. This specification\ndefines the following common error values:\n                    \n                        \ninvalidDidUrl\n                        \n                        \nThe DID URL supplied to the DID URL dereferencing function does\nnot conform to valid syntax. (See § 3.2 DID URL Syntax.)\n                        \n                        \nnotFound\n                        \n                        \nThe DID URL dereferencer was unable to find the\ncontentStream resulting from this dereferencing request.\n                        \n                    \n                ",
  "7.2.2 DID URL Dereferencing Metadata\nThe error code from the dereferencing process. This property is REQUIRED when\nthere is an error in the dereferencing process. The value of this property\nMUST be a single keyword expressed as an ASCII\nstring. The possible property values of this field SHOULD be registered in\nthe DID Specification Registries [DID-SPEC-REGISTRIES]. This specification\ndefines the following common error values:\n                    \n                        \ninvalidDidUrl\n                        \n                        \nThe DID URL supplied to the DID URL dereferencing function does\nnot conform to valid syntax. (See § 3.2 DID URL Syntax.)\n                        \n                        \nnotFound\n                        \n                        \nThe DID URL dereferencer was unable to find the\ncontentStream resulting from this dereferencing request.\n                        \n                    \n                ",
  "7.3 Metadata Structure\nInput and output metadata is often involved during the DID Resolution,\nDID URL dereferencing, and other DID-related processes. The structure\nused to communicate this metadata MUST be a map\nof properties. Each property name MUST be a string. Each property value MUST be a string, map, list, ordered\nset, boolean, or\nnull. The values within any complex data\nstructures such as maps and lists MUST be one of these data types as well.\nAll metadata property definitions registered in the DID Specification\nRegistries [DID-SPEC-REGISTRIES] MUST define the value type, including any\nadditional formats or restrictions to that value (for example, a string\nformatted as a date or as a decimal integer). It is RECOMMENDED that property\ndefinitions use strings for values. The entire metadata structure MUST be\nserializable in a conforming representation.\n        ",
  "7.3 Metadata Structure\nInput and output metadata is often involved during the DID Resolution,\nDID URL dereferencing, and other DID-related processes. The structure\nused to communicate this metadata MUST be a map\nof properties. Each property name MUST be a string. Each property value MUST be a string, map, list, ordered\nset, boolean, or\nnull. The values within any complex data\nstructures such as maps and lists MUST be one of these data types as well.\nAll metadata property definitions registered in the DID Specification\nRegistries [DID-SPEC-REGISTRIES] MUST define the value type, including any\nadditional formats or restrictions to that value (for example, a string\nformatted as a date or as a decimal integer). It is RECOMMENDED that property\ndefinitions use strings for values. The entire metadata structure MUST be\nserializable in a conforming representation.\n        ",
  "7.3 Metadata Structure\nInput and output metadata is often involved during the DID Resolution,\nDID URL dereferencing, and other DID-related processes. The structure\nused to communicate this metadata MUST be a map\nof properties. Each property name MUST be a string. Each property value MUST be a string, map, list, ordered\nset, boolean, or\nnull. The values within any complex data\nstructures such as maps and lists MUST be one of these data types as well.\nAll metadata property definitions registered in the DID Specification\nRegistries [DID-SPEC-REGISTRIES] MUST define the value type, including any\nadditional formats or restrictions to that value (for example, a string\nformatted as a date or as a decimal integer). It is RECOMMENDED that property\ndefinitions use strings for values. The entire metadata structure MUST be\nserializable in a conforming representation.\n        ",
  "7.3 Metadata Structure\nInput and output metadata is often involved during the DID Resolution,\nDID URL dereferencing, and other DID-related processes. The structure\nused to communicate this metadata MUST be a map\nof properties. Each property name MUST be a string. Each property value MUST be a string, map, list, ordered\nset, boolean, or\nnull. The values within any complex data\nstructures such as maps and lists MUST be one of these data types as well.\nAll metadata property definitions registered in the DID Specification\nRegistries [DID-SPEC-REGISTRIES] MUST define the value type, including any\nadditional formats or restrictions to that value (for example, a string\nformatted as a date or as a decimal integer). It is RECOMMENDED that property\ndefinitions use strings for values. The entire metadata structure MUST be\nserializable in a conforming representation.\n        ",
  "8.1 Method Syntax\nA DID method specification MUST define exactly one method-specific DID\nscheme that is identified by exactly one method name as specified by the\nmethod-name rule in § 3.1 DID Syntax.\n        ",
  "8.1 Method Syntax\nThe DID method specification MUST specify how to generate the\nmethod-specific-id component of a DID.\n        ",
  "8.1 Method Syntax\nThe DID method specification MUST define sensitivity and normalization of\nthe value of the method-specific-id.\n        ",
  "8.1 Method Syntax\nThe method-specific-id value MUST be unique within a DID\nmethod. The method-specific-id value itself might be globally\nunique.\n        ",
  "8.1 Method Syntax\nAny DID generated by a DID method MUST be globally unique.\n        ",
  "8.1 Method Syntax\nTo reduce the chances of method-name conflicts, a DID method\nspecification SHOULD be registered in the DID Specification Registries\n[DID-SPEC-REGISTRIES].\n        ",
  "8.1 Method Syntax\nThe method-specific-id format MAY include colons. The use of\ncolons MUST comply syntactically with the method-specific-id ABNF\nrule.\n        ",
  "8.2 Method Operations\nA DID method specification MUST define how authorization is performed to\nexecute all operations, including any necessary cryptographic processes.\n        ",
  "8.2 Method Operations\nA DID method specification MUST specify how a DID controller\ncreates a DID and its associated DID document.\n        ",
  "8.2 Method Operations\nA DID method specification MUST specify how a DID resolver uses a\nDID to resolve a DID document, including how the DID\nresolver can verify the authenticity of the response.\n        ",
  "8.2 Method Operations\nA DID method specification MUST specify what constitutes an update to a\nDID document and how a DID controller can update a DID\ndocument or state that updates are not possible.\n        ",
  "8.2 Method Operations\nThe DID method specification MUST specify how a DID controller can\ndeactivate a DID or state that deactivation is not possible.\n        ",
  "8.3 Security Requirements\nA DID method specifications MUST follow all guidelines and normative\nlanguage provided in RFC3552: Writing Security\nConsiderations Sections for the DID operations defined in the DID\nmethod specification.\n        ",
  "8.3 Security Requirements\nThe Security Considerations section MUST document the following forms of attack\nfor the DID operations defined in the DID method specification:\neavesdropping, replay, message insertion, deletion, modification, denial of\nservice, storage or network amplification, and man-in-the-middle. Other known\nforms of attack SHOULD also be documented.\n        ",
  "8.3 Security Requirements\nThe Security Considerations section MUST document the following forms of attack\nfor the DID operations defined in the DID method specification:\neavesdropping, replay, message insertion, deletion, modification, denial of\nservice, storage or network amplification, and man-in-the-middle. Other known\nforms of attack SHOULD also be documented.\n        ",
  "8.3 Security Requirements\nThe Security Considerations section MUST discuss residual risks, such as the\nrisks from compromise in a related protocol, incorrect implementation, or cipher\nafter threat mitigation was deployed.\n        ",
  "8.3 Security Requirements\nThe Security Considerations section MUST provide integrity protection and update\nauthentication for all operations required by Section § 8.2 Method Operations.\n        ",
  "8.3 Security Requirements\nIf authentication is involved, particularly user-host authentication, the\nsecurity characteristics of the authentication method MUST be clearly\ndocumented.\n        ",
  "8.3 Security Requirements\nThe Security Considerations section MUST discuss the policy mechanism by which\nDIDs are proven to be uniquely assigned.\n        ",
  "8.3 Security Requirements\nMethod-specific endpoint authentication MUST be discussed. Where DID\nmethods make use of DLTs with varying network topology, sometimes\noffered as light node or \nthin client\nimplementations to reduce required computing resources, the security assumptions\nof the topology available to implementations of the DID method MUST be\ndiscussed.\n        ",
  "8.3 Security Requirements\nMethod-specific endpoint authentication MUST be discussed. Where DID\nmethods make use of DLTs with varying network topology, sometimes\noffered as light node or \nthin client\nimplementations to reduce required computing resources, the security assumptions\nof the topology available to implementations of the DID method MUST be\ndiscussed.\n        ",
  "8.3 Security Requirements\nIf a protocol incorporates cryptographic protection mechanisms, the DID\nmethod specification MUST clearly indicate which portions of the data are\nprotected and by what protections, and it SHOULD give an indication of the\nsorts of attacks to which the cryptographic protection is susceptible. Some\nexamples are integrity only, confidentiality, and endpoint authentication.\n        ",
  "8.3 Security Requirements\nData which is to be held secret (keying material, random seeds, and so on)\nSHOULD be clearly labeled.\n        ",
  "8.3 Security Requirements\nDID method specifications SHOULD explain and specify the implementation\nof signatures on DID documents, if applicable.\n        ",
  "8.3 Security Requirements\nWhere DID methods use peer-to-peer computing resources, such as with all\nknown DLTs, the expected burdens of those resources SHOULD be discussed\nin relation to denial of service.\n        ",
  "8.3 Security Requirements\nDID methods that introduce new authentication service\ntypes, as described in § 5.4 Services, SHOULD consider the\nsecurity requirements of the supported authentication protocol.\n        ",
  "8.4 Privacy Requirements\nThe DID method specification's Privacy Considerations section MUST\ndiscuss any subsection of Section 5 of [RFC6973] that could apply in a\nmethod-specific manner. The subsections to consider are: surveillance, stored\ndata compromise, unsolicited traffic, misattribution, correlation,\nidentification, secondary use, disclosure, and exclusion.\n        "
]
